<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptNotice" xml:space="preserve">
    <value>上記について理解しました。</value>
  </data>
  <data name="CaptionQ1" xml:space="preserve">
    <value>何故あなたはコードを書くのでしょうか?</value>
  </data>
  <data name="CaptionQ2" xml:space="preserve">
    <value>あなたの"コード歴" を教えてください。</value>
  </data>
  <data name="CaptionQ3" xml:space="preserve">
    <value>差し支えなければ、あなたの活動拠点の都道府県名、あるいは、国名を教えてください。</value>
  </data>
  <data name="CaptionQ4" xml:space="preserve">
    <value>コードに対する想いなど、ご自由に一言お願いします。</value>
  </data>
  <data name="Choice1OfQ1" xml:space="preserve">
    <value>創造する楽しみ・喜びのために。</value>
  </data>
  <data name="Choice2OfQ1" xml:space="preserve">
    <value>書いた結果がすぐに動き出すのがおもしろい。</value>
  </data>
  <data name="Choice3OfQ1" xml:space="preserve">
    <value>パズルを解くような楽しみ、問題を解く喜びがあるから。</value>
  </data>
  <data name="Choice4OfQ1" xml:space="preserve">
    <value>人間相手が苦手なので(!?)</value>
  </data>
  <data name="Choice5OfQ1" xml:space="preserve">
    <value>必要に迫られて。</value>
  </data>
  <data name="Choice6OfQ1" xml:space="preserve">
    <value>稼ぐために。</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>回答を登録しました。</value>
  </data>
  <data name="ConfirmPrompt" xml:space="preserve">
    <value>下記の内容で回答を登録します。よろしいですか?</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="GoNext" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="JumpToCode201OfficialSite" xml:space="preserve">
    <value>Code2012 イベントページへ</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>登録頂いた内容は、インターネット上から自由に参照可能となります。またCode2012 イベント当日にも、回答内容の発表があります。</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>回答を登録</value>
  </data>
  <data name="SiteTitle" xml:space="preserve">
    <value>Code2012 アンケート</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>アンケートにご協力、ありがとうございました。</value>
  </data>
  <data name="UnitOfYears" xml:space="preserve">
    <value>年</value>
  </data>
</root>